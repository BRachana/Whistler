{"version":3,"sources":["Header.js","CoffeeCard.js","constants.js","Content.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","TypographyStyles","flex","Header","classes","AppBar","position","Toolbar","Typography","className","root","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","Coffeecard","props","price","description","avatarUrl","imageUrl","Card","CardHeader","avatar","Avatar","aria-label","src","action","IconButton","subheader","CardMedia","style","height","media","image","CardContent","variant","component","CardActions","Button","size","Content","Grid","container","spacing","CoffeeMakerList","map","coffeeMakerObj","item","xs","sm","CoffeeCard","getCoffeeMakerData","App","direction","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b4a4f084.chunk.js","sourcesContent":["import React from 'react';\nimport {AppBar, Toolbar, Typography} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/styles';\nimport AcUnitIcon from '@material-ui/icons/AcUnitOutlined';\n\n\n\n\nconst useStyles = makeStyles( () => ({\n\tTypographyStyles: {\n\t\tflex:1\n\t}\n}));\n\nconst Header = () => {\n\tconst classes = useStyles();\n\treturn(\n\t\t<AppBar position=\"static\">\n\t\t\t<Toolbar>\n\t\t\t\t<Typography className={classes.TypographyStyles}> Header </Typography>\n\t\t\t\t<AcUnitIcon></AcUnitIcon>\n\t\t\t</Toolbar>\n\t\t</AppBar>\n\t)\n};\n\nexport default Header;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\n\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nconst Coffeecard = (props) => {\n\tconst {title, price, description, avatarUrl, imageUrl} = props;\n  \tconst classes = useStyles();\n\n  \treturn (\n\t    <Card>\n\t\t\t<CardHeader\n\t\t\t\tavatar={\n\t\t\t\t\t<Avatar aria-label=\"recipe\" src={avatarUrl} className={classes.avatar}/>\n\t\t\t\t}\n\t\t\t\taction={\n\t\t\t\t\t<IconButton aria-label=\"settings\">\n\t\t\t\t\t\t<MoreVertIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t}\n\t\t\t\ttitle={title}\n\t\t\t\tsubheader={price}\n\t\t\t/>\n\t\t\t<CardMedia style={{height:\"150px\"}}\n\t\t        className={classes.media}\n\t\t        image={imageUrl}\n\t\t        title={title}\n\t        />\n\n\t\t\t<CardContent>\n\t\t\t\t<Typography variant=\"body2\" component=\"p\">\n\t\t\t\t{description}\n\t\t\t\t</Typography>\n\t\t\t</CardContent>\n\n\t\t\t<CardActions>\n\t\t\t\t<Button size=\"small\">BUY NOW</Button>\n\t\t\t\t<Button size=\"small\">OFFER</Button>\n\t\t\t</CardActions>\n\t    </Card>\n  );\n}\n\nexport default Coffeecard;","export default [\n\t{\n\t  title: \"Keurig K-Duo\",\n\t  price: \"$149.99\",\n\t  description:\n\t\t\"Use both ground coffee and k-cup pods. Multiple brew sizes: brew an 8, 10, or 12-cup carafe and an 237, 296, or 355ml (8, 10, or 12 oz. ) cup \",\n\t  avatarUrl:\n\t\t\"https://upload.wikimedia.org/wikipedia/commons/e/e0/Keurig_Logo.png\",\n\t  imageUrl:\n\t\t\"https://images-na.ssl-images-amazon.com/images/I/61-KUPluVYL._AC_SL1500_.jpg\"\n\t},\n\t{\n\t  title: \"KRUPS Electric Spice\",\n\t  price: \"$19.99\",\n\t  description:\n\t\t\"Large grinding capacity yields ground coffee for up to 12 cups of coffee\",\n\t  avatarUrl:\n\t\t\"https://images-na.ssl-images-amazon.com/images/I/81CbxNLCHCL._AC_SL1500_.jpg\",\n\t  imageUrl:\n\t\t\"https://images-na.ssl-images-amazon.com/images/I/71FhMLBP9XL._AC_SL1500_.jpg\"\n\t},\n\t{\n\t  title: \"Hamilton Beach Flexbrew\",\n\t  price: \"$89.99\",\n\t  description:\n\t\t\"No two coffee drinkers are the same â€“ so, the flexibility to customize how and what you brew is key. From fresh grounds to K-Cup pods, the Hamilton Beach FlexBrew 2-Way Coffee Maker gives you the options to please fans of all types of coffees.\",\n\t  avatarUrl:\n\t\t\"https://images-na.ssl-images-amazon.com/images/I/81mjh5ZSu1L._AC_SL1500_.jpg\",\n\t  imageUrl:\n\t\t\"https://images-na.ssl-images-amazon.com/images/I/818rz3CIaFL._AC_SL1500_.jpg\"\n\t},\n\t{\n\t  title: \"Secura French Press\",\n\t  price: \"$36.48\",\n\t  description:\n\t\t\"3-layered Stainless steel filter traps the smallest coffee grounds to produce an exceptional full-bodied flavor, filter is easy to disassemble and clean.\",\n\t  avatarUrl:\n\t\t\"https://images-na.ssl-images-amazon.com/images/I/61u76aiQQsL._AC_SL1000_.jpg\",\n\t  imageUrl:\n\t\t\"https://images-na.ssl-images-amazon.com/images/I/61XRMmXVwQL._AC_SL1500_.jpg\"\n\t},\n\t{\n\t  title: \"Cafe Du Chateau French Press\",\n\t  price: \"$32.95\",\n\t  description:\n\t\t\"We use double stainless steel screen filters on a durable plunger supported by a spring loaded base plate to seal the edges, followed by a final top lid strainer to give you a pure brew with no grounds unlike other cheap presses.\",\n\t  avatarUrl:\n\t\t\"https://images-na.ssl-images-amazon.com/images/I/81BdxpiRtCL._AC_SL1500_.jpg\",\n\t  imageUrl:\n\t\t\"https://images-na.ssl-images-amazon.com/images/I/81luUhz7ZlL._AC_SL1500_.jpg\"\n\t},\n\t{\n\t  title: \"LIVINGbasics Single Serve Coffee Maker \",\n\t  price: \"$37.99\",\n\t  description:\n\t\t'Brew with a single serve k-cup pod or ground coffee. Less than 14 cm (5.5\") wide slim design, its the perfect size for any space.',\n\t  avatarUrl:\n\t\t\"https://images-na.ssl-images-amazon.com/images/I/61PGHBLkl8L._AC_SL1500_.jpg\",\n\t  imageUrl:\n\t\t\"https://images-na.ssl-images-amazon.com/images/I/61KBB8K1wDL._AC_SL1000_.jpg\"\n\t}\n  ];","import React from 'react';\nimport CoffeeCard from './CoffeeCard';\nimport {Grid} from '@material-ui/core';\nimport CoffeeMakerList from './constants';\n\nconst Content = () => {\n\n\tconst getCoffeeMakerData = (coffeeMakerObj) => {\n\t\treturn(\n\t\t\t<Grid item xs={12} sm={4}>\n\t\t\t\t<CoffeeCard {...coffeeMakerObj}/>\n\t\t\t</Grid>\n\t\t)\n\t}\n\n\treturn(\n\t\t<Grid container spacing={2}>\n\t\t\t{CoffeeMakerList.map(coffeeMakerObj => getCoffeeMakerData(coffeeMakerObj))}\n\t\t</Grid>\n\t\t\n\t)\n};\n\nexport default Content;","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport './App.css';\nimport Header from './Header';\nimport Content from './Content';\n\nfunction App() {\n  return (\n    <Grid container direction=\"column\">\n\t\t<Grid item>\n\t\t\t<Header></Header>\n\t\t</Grid>\n\t\t<Grid item container>\n\t\t\t<Grid xs={false} sm={2}></Grid> \n\t\t\t<Grid xs={12} sm={8}> \n\t\t\t<Content></Content>\n\t\t\t</Grid> \n\t\t\t<Grid xs={false} sm={2}></Grid> \n\t\t</Grid>\n\t</Grid>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}